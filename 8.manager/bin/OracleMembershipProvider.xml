<?xml version="1.0"?>
<doc>
<assembly>
<name>
OracleMembershipProvider
</name>
</assembly>
<members>
<member name="F:OracleMembershipProvider.OracleMembershipProvider.Provider.pWriteExceptionsToEventLog">
	<summary>
 If False, exceptions are thrown to the caller. If True,
 exceptions are written to the event log.</summary>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
	<summary>
 Initializes the provider. 
 </summary>
	<param name="name">The friendly name of the provider.</param>
	<param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provide</param>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.GetConfigValue(System.String,System.String)">
	<summary>
 A helper function to retrieve config values from the configuration file.
 </summary>
	<param name="configValue"></param>
	<param name="defaultValue"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.ChangePassword(System.String,System.String,System.String)">
	<summary>
 Processes a request to update the password for a membership user. 
 </summary>
	<param name="username">The user to update the password for. </param>
	<param name="oldPwd">The current password for the specified user. </param>
	<param name="newPwd">The new password for the specified user.</param>
	<returns>true if the password was updated successfully; otherwise, false. </returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
	<summary>
 Processes a request to update the password question and answer for a membership user. 
 </summary>
	<param name="username">The user to change the password question and answer for. </param>
	<param name="password">The password for the specified user.</param>
	<param name="newPwdQuestion">The new password question for the specified user.</param>
	<param name="newPwdAnswer">The new password answer for the specified user.</param>
	<returns>true if the password question and answer are updated successfully; otherwise, false. </returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
	<summary>
 MembershipProvider.CreateUser
 Uses columns 
 </summary>
	<param name="username">The user name for the new user.</param>
	<param name="password">The password for the new user. </param>
	<param name="email">The e-mail address for the new user.</param>
	<param name="passwordQuestion">The password question for the new user.</param>
	<param name="passwordAnswer">The password answer for the new user</param>
	<param name="isApproved">Whether or not the new user is approved to be validated.</param>
	<param name="providerUserKey">The unique identifier from the membership data source for the user.</param>
	<param name="status">A MembershipCreateStatus enumeration value indicating whether the user was created successfully.</param>
	<returns>A MembershipUser object populated with the information for the newly created user. </returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.DeleteUser(System.String,System.Boolean)">
	<summary>
 Removes a user from the membership data source.
 </summary>
	<param name="username">The name of the user to delete.</param>
	<param name="deleteAllRelatedData">true to delete data related to the user from the database; false to leave data related to the user in the databases
</param>
	<returns>true if the user was successfully deleted; otherwise, false. </returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
	<summary>
 Gets a collection of all the users in the data source in pages of data. 
 </summary>
	<param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
	<param name="pageSize">The size of the page of results to return.</param>
	<param name="totalRecords">The total number of matched users.</param>
	<returns>A MembershipUserCollection collection that contains a page of pageSizeMembershipUser objects beginning at the page specified by pageIndex. </returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.GetNumberOfUsersOnline">
	<summary>
 Gets the number of users currently accessing the application. 
 </summary>
	<returns>The number of users currently accessing the application. </returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.GetPassword(System.String,System.String)">
	<summary>
 Gets the password for the specified user name from the data source. 
 </summary>
	<param name="username">The user to retrieve the password for.</param>
	<param name="answer">The password answer for the user.</param>
	<returns>The password for the specified user name.</returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.GetUser(System.String,System.Boolean)">
	<summary>
 Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.
 </summary>
	<param name="username">The name of the user to get information for.</param>
	<param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user.</param>
	<returns>A MembershipUser object populated with the specified user's information from the data source.</returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.GetUser(System.Object,System.Boolean)">
	<summary>
 Gets information from the data source for a user based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.
 </summary>
	<param name="providerUserKey">The unique identifier for the membership user to get information for.</param>
	<param name="userIsOnline">true to update the last-activity date/time stamp for the user; false to return user information without updating the last-activity date/time stamp for the user.</param>
	<returns>A MembershipUser object populated with the specified user's information from the data source.</returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.UnlockUser(System.String)">
	<summary>
 Clears a lock so that the membership user can be validated.
 </summary>
	<param name="username">The membership user to clear the lock status for.</param>
	<returns>true if the membership user was successfully unlocked; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.GetUserNameByEmail(System.String)">
	<summary>
 Gets the user name associated with the specified e-mail address.
 </summary>
	<param name="email">The e-mail address to search for. </param>
	<returns>The user name associated with the specified e-mail address. If no match is found, return a null reference (Nothing in Visual Basic).</returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.ResetPassword(System.String,System.String)">
	<summary>
 Resets a user's password to a new, automatically generated password.
 </summary>
	<param name="username">The user to reset the password for.</param>
	<param name="answer">The password answer for the specified user.</param>
	<returns>The new password for the specified user.</returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.UpdateUser(System.Web.Security.MembershipUser)">
	<summary>
 Updates information about a user in the data source. 
 </summary>
	<param name="user">A MembershipUser object that represents the user to update and the updated information for the user.</param>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.ValidateUser(System.String,System.String)">
	<summary>
 Verifies that the specified user name and password exist in the data source.
 </summary>
	<param name="username">The name of the user to validate.</param>
	<param name="password">The password for the specified user.</param>
	<returns>true if the specified username and password are valid; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
	<summary>
 Gets a collection of membership users where the user name contains the specified user name to match.
 </summary>
	<param name="usernameToMatch">The user name to search for.</param>
	<param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
	<param name="pageSize">The size of the page of results to return.</param>
	<param name="totalRecords">The total number of matched users.</param>
	<returns>The total number of matched users.</returns>
	<remarks></remarks>
</member><member name="M:OracleMembershipProvider.OracleMembershipProvider.Provider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
	<summary>
 Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.
 </summary>
	<param name="emailToMatch">The e-mail address to search for.</param>
	<param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
	<param name="pageSize">The size of the page of results to return.</param>
	<param name="totalRecords">The total number of matched users.</param>
	<returns>A MembershipUserCollection collection that contains a page of pageSizeMembershipUser objects beginning at the page specified by pageIndex.</returns>
	<remarks></remarks>
</member>
</members>
</doc>